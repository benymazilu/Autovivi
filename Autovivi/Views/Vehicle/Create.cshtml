@model Autovivi.Models.Vehicle
@using Autovivi.Models

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@Scripts.Render("~/bundles/jquery")
<script>
    $(function ()
    {
        $('#Brand').change(function ()
        {
            $.getJSON('/Vehicle/ModelList/' + $('#Brand option:selected').text(), function (data)
            {
                var items = '<option>Da-i cu modelu</option>';
                $.each(data, function (i, model)
                {
                    items += "<option value='" + model.Value + "'>" + model.Text + "</option>";
                });
                $('#Model').html(items);
            });
        });
    })();

</script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Vehicle</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Brand, "Select Brand", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Model, Enumerable.Empty<SelectListItem>(), htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })



            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductionYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.ProductionYear,"Select Production Year", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductionYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FuelType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.FuelType,"Select Fuel Type", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FuelType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VehicleType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.VehicleType,"Select Vehicle Type", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VehicleType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mileage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mileage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mileage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CubicCapacity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CubicCapacity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CubicCapacity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Condition, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Condition, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Damage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Damage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Damage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryOrigin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CountryOrigin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CountryOrigin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Colour, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Colour, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Colour, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GearBox, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.GearBox,"Select Gearbox", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GearBox, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Power, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Power, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Power, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Options, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@for (int i = 0; i < Model.Options.Count; i++)
                {
                    <label>

                        @Html.CheckBoxFor(m => Model.Days[0].Selected)
                        @Html.HiddenFor(m => Model.Days[0].Value)
                    </label>
                    <label>
                        @T("Vodka")
                        @Html.CheckBoxFor(m => Model.Days[1].Selected)
                        @Html.HiddenFor(m => Model.Days[1].Value)
                    </label>
                    <label>
                        @T("Rum")
                        @Html.CheckBoxFor(m => Model.Days[2].Selected)
                        @Html.HiddenFor(m => Model.Days[2].Value)
                    </label>
                }*@
                @Html.ValidationMessageFor(model => model.Options, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BodyStyle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.BodyStyle,"Select Body Style", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BodyStyle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
